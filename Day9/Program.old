using Utils;

var lines = await FileProvider.ReadAllLines(default);

var head = new List<(int,int)> { (0,0) };
var tail = new List<(int,int)> { (0,0) };

foreach(var line in lines){
    var turn = line.Split(" ");
    var moves = int.Parse(turn[1]);
   
    switch(turn[0]){
        case "R":
            for(int i =0; i < moves; i++){
                var headp = head.First();
                var tailp = tail.First();
                var newHead = headp.Item2+1;
                head.Insert(0,(headp.Item1, newHead));
                if(tailp.Item1 != headp.Item1){
                    if(tailp.Item2 < headp.Item2){
                        tail.Insert(0,(headp.Item1, tailp.Item2+1));
                    }
                }else{
                    if(tailp.Item2 < headp.Item2){
                        tail.Insert(0,(tailp.Item1, tailp.Item2+1));
                    }
                }
            }
            break;
        case "L":
            for(int i =0; i < moves; i++){
                var headp = head.First();
                var tailp = tail.First();
                var newHead = headp.Item2-1;
                head.Insert(0,(headp.Item1, newHead));
                if(tailp.Item1 != headp.Item1){
                    if(tailp.Item2 > headp.Item2){
                        tail.Insert(0,(headp.Item1, tailp.Item2-1));
                    }
                }else{
                   if(tailp.Item2 > headp.Item2){
                        tail.Insert(0,(tailp.Item1, tailp.Item2-1));
                    }
                }
            }
            break;
        case "U":
            for(int i =0; i < moves; i++){
                var headp = head.First();
                var tailp = tail.First();
                var newHead = headp.Item1+1;
                head.Insert(0,(newHead, headp.Item2));
                if(tailp.Item2 != headp.Item2){
                    if(tailp.Item1 < headp.Item1){
                        tail.Insert(0,(tailp.Item1+1, headp.Item2));
                    }
                }else{
                    if(tailp.Item1 < headp.Item1){
                        tail.Insert(0,(tailp.Item1+1, tailp.Item2));
                    }
                }
            }
            break;
        case "D":
            for(int i =0; i < moves; i++){
                var headp = head.First();
                var tailp = tail.First();
                var newHead = headp.Item1-1;
                head.Insert(0,(newHead, headp.Item2));
                if(tailp.Item2 != headp.Item2){
                    if(tailp.Item1 > headp.Item1){
                        tail.Insert(0,(tailp.Item1-1, headp.Item2));
                    }
                }else{
                   if(tailp.Item1 > headp.Item1){
                        tail.Insert(0,(tailp.Item1-1, tailp.Item2));
                   }
                }
            }
            break;
    }
}

Console.WriteLine(tail.Distinct().Count());